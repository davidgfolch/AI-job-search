extractor_task:
  description: >
    Analyze the following job offer and extract structured information.
    
    Job Offer:
    {markdown}
    
    Extract the following information:
    - Required technologies (comma-separated list)
    - Optional technologies (comma-separated list)
    - Salary information (if available)

    
  expected_output: >
    A valid JSON object with the extracted information. Include all fields even if empty.
    The json output must have the following fields and structure:
    {
      "required_technologies": "..., ..., ...",
      "optional_technologies": "..., ..., ...",
      "salary": "...",
    }
  agent: extractor_agent

# description
    # - Experience level required
    # - Key responsibilities (comma-separated list)
# expected_output
    # "experience_level": "3-5 years",
    # "responsibilities": "Develop backend services, manage databases"


cv_matcher_task:
  description: >
    Analyze the job offer and the provided CV to calculate a match percentage.
    
    Job Offer:
    {markdown}
    
    Candidate CV:
    {cv_content}
    
    Evaluate the following aspects:
    1. Required skills match (40% weight)
    2. Experience level and years (25% weight)
    3. Optional skills and technologies (15% weight)
    4. Education and certifications (10% weight)
    5. Industry/domain knowledge (10% weight)
    
    Provide a single number between 0 and 100 representing the overall match percentage and set it in cv_match_percentage field.
    Consider both hard skills (technical requirements) and soft skills.
    Be objective and realistic in your assessment.
    
  expected_output: >
    A valid JSON object with the extracted information. Include all fields even if empty.
    The json output must have the following fields and structure with the calculated value:
    {"cv_match_percentage": }
  agent: cv_matcher_agent
  context:
  - extractor_task