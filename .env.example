#Leave it empty to use local Ollama, setup to use OpenAi or Gemini api keys
OPENAI_API_KEY=
GEMINI_API_KEY=

#View: show sql queries
SHOW_SQL=False
CLEAN_MARK_IGNORED_BY_TITLE_LOWER_REGEX=sap|abap|hana|cobol|devops|junior|internship|prÃ¡cticas|becario
# AI enrichment: structured data extraction
AI_ENRICHMENT_JOB_TIMEOUT_MINUTES=1
#AI enrichment: automatic job merge & delete old.
AUTOMATIC_REPEATED_JOBS_MERGE=True

# Credentials
LINKEDIN_EMAIL=xxxxx@xxxxx.com
LINKEDIN_PWD=yyyyy

INFOJOBS_EMAIL=xxxxx@xxxxx.com
INFOJOBS_PWD=yyyyy

GLASSDOOR_EMAIL=xxxxx@xxxxx.com
GLASSDOOR_PWD=yyyyy

INDEED_EMAIL=xxxxx@xxxxx.com
INDEED_PWD=yyyyy

TECNOEMPLEO_EMAIL=xxxxx@xxxxx.com
TECNOEMPLEO_PWD=yyyyy

# Search
JOBS_SEARCH=java,python,scala,clojure,senior software engineer
# Glassdoor security filter when too much request, don't change fromAge=1 (1 day old jobs only)
# Glassdoor url contains "calculated" uri suffix like (SRCH_IL.0,6_IN219_KO7,11.htm) so if you want to change job search must generate url in www.glassdoor.com
# and paste all in GLASSDOOR_JOBS_SEARCH separated by |~|
GLASSDOOR_JOBS_SEARCH=espa%C3%B1a-java-empleos-SRCH_IL.0,6_IN219_KO7,11.htm|~|espa%C3%B1a-python-empleos-SRCH_IL.0,6_IN219_KO7,13.htm|~|espa%C3%B1a-scala-empleos-SRCH_IL.0,6_IN219_KO7,12.htm|~|espa%C3%B1a-clojure-empleos-SRCH_IL.0,6_IN219_KO7,14.htm|~|espa%C3%B1a-senior-software-engineer-empleos-SRCH_IL.0,6_IN219_KO7,31.htm
GLASSDOOR_JOBS_SEARCH_BASE_URL=https://www.glassdoor.es/Empleo/{search}?remoteWorkType=1&fromAge=1&sortBy=date_desc

# Viewer form filter (note "negative look ahead")
WHERE_FILTER_REGEX=java([^script]|$)|python|scala|clojure
# SALARY FILTERS
# SALARY_FILTER_REGEX=[0-9]{2,}  # Some amount specified
# SALARY_FILTER_REGEX=([123456789]|[123][0-9])[0-9]   # Some amount specified matching numbers > 10 (for ex.: 10k or 10.000)
# SALARY_FILTER_REGEX=([23456789]|[123][0-9])[0-9]   # Some amount specified matching numbers > 20 (for ex.: 20k or 20.000)
SALARY_FILTER_REGEX=([3456789]|[123][0-9])[0-9]   # Some amount specified matching numbers > 30 (for ex.: 30k or 30.000)
# SALARY_FILTER_REGEX=([456789]|[123][0-9])[0-9]   # Some amount specified matching numbers > 40 (for ex.: 40k or 40.000)
# SALARY_FILTER_REGEX=([56789]|[123][0-9])[0-9]   # Some amount specified matching numbers > 40 (for ex.: 50k or 50.000)