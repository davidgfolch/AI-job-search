# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        cd ./packages/commonlib && poetry install --sync --no-interaction && cd ../..
        cd ./apps/scrapper && poetry install --sync --no-interaction && cd ../..
        cd ./apps/viewer && poetry install --sync --no-interaction && cd ../..
        cd ./apps/aiEnrich && poetry install --sync --no-interaction && cd ../..
    - name: Run common tests
      run: |
        cd ./packages/commonlib && poetry run pytest && cd ../..
        cd ./apps/scrapper && poetry run pytest && cd ../..
        cd ./apps/viewer && poetry run pytest && cd ../..
        cd ./apps/aiEnrich && uv run pytest && cd ../..
    # - name: Set PYTHONPATH
    #   run: echo "PYTHONPATH=src" >> $GITHUB_ENV
    # - name: Clean up __pycache__ and .pyc files
    #   run: |
    #     find . -type d -name "__pycache__" -exec rm -r {} +
    #     find . -type f -name "*.pyc" -exec rm -f {} +
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Coverage
      run: |
        # coverage report --fail-under=90 -m
        coverage run --source=src -m pytest --ignore=test/ai_job_search/scrappers_test.py
        coverage report -m
    - name: Coverage badge
      run: |
        coverage-badge -o coverage.svg -f
